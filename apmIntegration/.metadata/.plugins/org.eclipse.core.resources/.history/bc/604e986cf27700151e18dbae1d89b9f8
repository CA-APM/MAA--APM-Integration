//Sample URL: http://10.130.179.82:8080/apm/metricFeed 

package apm.ca.com;


import java.io.BufferedReader;  
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.InputStreamReader;  
import java.util.Random;  
import java.util.regex.*;
import org.json.simple.parser.JSONParser;
import java.io.FileReader;
import org.apache.http.HttpResponse;  
import org.apache.http.client.HttpClient;  
import org.apache.http.client.methods.HttpPost;  
import org.apache.http.entity.ContentType;  
import org.apache.http.entity.StringEntity;  
import org.apache.http.impl.client.HttpClientBuilder;  
  
  
public class JSONPost {  
	
	public static void main(String[] args) {
		
	  // command line parameters
  
		// EPAgent ip address and port
		// String EPAgentURL = args[0];
		// MAA report type
		// String type = args[1];
    
    
    String EPAgentURL = "10.132.66.116:8081";
    String type = "appPerformance";
    
    //  other parameters

    String StNumber = "";
    String name  = "test";
  
System.out.println("Starting...");

JSONParser parser = new JSONParser();
          try {  
        	  
        	  if (type.equals("geo"))
        		  
        	  {
        		  
        	  // get values from JSON MAA output
        	  Object obj = parser.parse(new FileReader("C:\\MAA\\getJSON.txt"));
        	  
        	  String jsonData = obj.toString();
        	  
        	  // since the JSON coming out of MAA is erratic, parse output as string and write to a temp file
        	  jsonData = jsonData.replaceAll("],", "\n").replaceAll("\\[|\\]", "").replaceAll("\\{|\\}", "").replace("\"", "").replaceAll(",", ":");
 
        	  
        	  File file = new File("geo.txt");
        	  
      		// if file doesn't exists, then create it
  			if (!file.exists()) {
  				file.createNewFile();
  			}

  			FileWriter fw = new FileWriter(file.getAbsoluteFile());
  			BufferedWriter bw = new BufferedWriter(fw);  			
  			 			
  			bw.write(jsonData);
  			bw.close();

  			// read data from temp file   	  
        	  
        	  BufferedReader br = new BufferedReader(new FileReader("geo.txt"));
        	  String sCurrentLine;
         	 
        	  // regex pattern to take only valid value pairs - US:9 - specific to Usage by Geo
        	  Pattern patt = Pattern.compile("[A-Z][A-Z][:][0-9][0-9]");   	
              while ((sCurrentLine = br.readLine()) != null) {
            	  
                  Matcher m = patt.matcher(sCurrentLine);
                  
                  while (m.find()) {
                	  
                	  // Split value pair and put into array

                  String[] countryData = sCurrentLine.split(":");
  
                   name = countryData[0];
                   //number = Integer.parseInt(countryData[1]); 
                   // EPAgent wants string not int
                   StNumber = countryData[1];
   
          	  // push the array values 0 and 1 to APM
              String apiURL = "http://"+EPAgentURL+"/apm/metricFeed";  
              
              
               HttpClient c = HttpClientBuilder.create().build();        
               HttpPost p = new HttpPost(apiURL);        
  
  
               p.setEntity(new StringEntity(  
                         "{ \"metrics\" : [{ \"type\" : \"IntAverage\", \"name\" : \"Country" + name + "\", \"value\"=\"" + StNumber + "\"}] }",  
                         ContentType.create("application/json")));                 

               HttpResponse r = c.execute(p);  
               
               System.out.println("Pushed: " + name+ ": " + StNumber+ "\n"); 

               BufferedReader rd = new BufferedReader(new InputStreamReader(r.getEntity().getContent()));  
               String line = "";  
               while ((line = rd.readLine()) != null) {  
                    System.out.println(line);  
               }  
          }  
          
              }
          } else if (type.equals("appPerformance")) {
        	  
        	  String getPerf = appPerformance.getPerf(EPAgentURL);
        	  
          }
          }
          catch(Exception e) {  
               System.out.println(e);  
          }                        
     }  

	}
