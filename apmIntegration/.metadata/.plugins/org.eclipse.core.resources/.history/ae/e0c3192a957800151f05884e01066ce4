package apm.ca.com;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.StringEntity;
import org.apache.http.entity.mime.MultipartEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.json.JSONObject;
import org.json.simple.parser.JSONParser;

public class appPerformance {

		
		//"/mdo/v1/performance/apps_summary"
			
			public static String getPerf(String EPAgentURL)	 {	
	    
	    
	     //EPAgentURL = "10.132.66.116:8081";

	    //  other parameters

	    String loadTime = "";
	    String httpRequests = "";
	    String httpErrors = "";
	    String users = "";
	    String latency = "";
	    String name  = "";
	  
	System.out.println("Starting...");

	JSONParser parser = new JSONParser();
	          try {  
	        	  

	        		  
	        	  // get values from JSON MAA output
	        	  Object obj = parser.parse(new FileReader("C:\\MAA\\getJSON.txt"));
	        	  
	        	  String jsonData = obj.toString();
	        	  
	        	 // JSONObject jObject = new JSONObject(jsonData);
	        	  //String input = jObject.getString("averages");
	        	  
	        	  // since the JSON coming out of MAA is erratic, parse output as string and write to a csv file
	        	  jsonData = jsonData.replaceAll("],", "\n").replaceAll("\\[|\\]", "").replaceAll("\\{|\\}", "").replace("\"", "").replaceAll("_", " ");

	        	  
	        	  File file = new File("appPerformance.csv");
	        	  
	      		// if file doesn't exists, then create it
	  			if (!file.exists()) {
	  				file.createNewFile();
	  			}

	  			FileWriter fw = new FileWriter(file.getAbsoluteFile());
	  			BufferedWriter bw = new BufferedWriter(fw);  			
	  			 			
	  			bw.write(jsonData);
	  			bw.close();

	  			// read data from temp file   	  
	        	  
				 BufferedReader br = null;
					String line = "";				
					FileInputStream fstream = new FileInputStream("appPerformance.csv");
					DataInputStream in = new DataInputStream(fstream);
					br = new BufferedReader(new InputStreamReader(in, "UTF8"));		
					
					while ((line = br.readLine()) != null) {
						String[] spec = line.split(",");  
						name  = spec[0];

	                   //number = Integer.parseInt(countryData[1]); 
	                   // EPAgent wants string not int
						//httpRequests = spec[1].replace(".0", "");
	                   loadTime = spec[5].replace(".0", "");
	   
	                   System.out.println(name+" "+loadTime);
	                   
	          	  // push the array values 0 and 1 to APM
	              String apiURL = "http://"+EPAgentURL+"/apm/metricFeed";  
	 
	               HttpClient c = HttpClientBuilder.create().build();        
	               HttpPost p = new HttpPost(apiURL);        
	
	               p.setEntity(new StringEntity(  
	                         "{ \"metrics\" : [{ \"type\" : \"IntAverage\", \"name\" : \"MAA|App " + name + "|:Load time\", \"value\"=\"" + loadTime + "\"}] }",  
	                         ContentType.create("application/json")));           
	               


	               HttpResponse r = c.execute(p);  	 
	              // HttpResponse u = a.execute(f); 
	             	               
	               System.out.println("Pushed: " + name+ ": " + loadTime+ "\n"); 

	               // read and display return message and error
	               BufferedReader rd = new BufferedReader(new InputStreamReader(r.getEntity().getContent()));  
	               String lineIn = "";  
	               while ((lineIn = rd.readLine()) != null) {  
	                    System.out.println(lineIn);  
	               }                  
	          
					
					
					}
					 br.close();
	              
	          }
	          catch(Exception e) {  
	               System.out.println(e);  
	          }     
	          
	  		return "Done";
	     }  
	
		}